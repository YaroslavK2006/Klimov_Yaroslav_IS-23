import sqlite3

# Создание соединения с базой данных
conn = sqlite3.connect('расходы.db')
cursor = conn.cursor()

# Создание таблицы "Расходы"
cursor.execute('''
CREATE TABLE IF NOT EXISTS расходы (
    id INTEGER PRIMARY KEY,
    номер_приказа INTEGER,
    фамилия_сотрудника TEXT,
    место_командировки TEXT,
    сумма_оплаты REAL,
    сумма_аванса REAL,
    вид_расходов TEXT,
    сумма_расходов REAL
)
''')


# Функция для добавления новой записи в таблицу
def добавить_запись():
    номер_приказа = int(input("Введите номер приказа: "))
    фамилия_сотрудника = input("Введите фамилию сотрудника: ")
    место_командировки = input("Введите место командировки: ")
    сумма_оплаты = float(input("Введите сумму оплаты: "))
    сумма_аванса = float(input("Введите сумму аванса: "))
    вид_расходов = input("Введите вид расходов: ")
    сумма_расходов = float(input("Введите сумму расходов: "))

    cursor.execute('''
        INSERT INTO расходы (номер_приказа, фамилия_сотрудника, место_командировки, сумма_оплаты, сумма_аванса, вид_расходов, сумма_расходов)
        VALUES (?, ?, ?, ?, ?, ?, ?)
    ''', (
    номер_приказа, фамилия_сотрудника, место_командировки, сумма_оплаты, сумма_аванса, вид_расходов, сумма_расходов))
    conn.commit()


# Функция для поиска записи в таблице
def поиск_записи():
    номер_приказа = int(input("Введите номер приказа для поиска: "))
    cursor.execute('''
        SELECT * FROM расходы
        WHERE номер_приказа = ?
    ''', (номер_приказа,))
    result = cursor.fetchone()
    if result:
        print("Найденная запись:")
        print(f"№ приказа: {result[1]}")
        print(f"Фамилия: {result[2]}")
        print(f"Место командировки: {result[3]}")
        print(f"Оплата: {result[4]}")
        print(f"Аванс: {result[5]}")
        print(f"Вид расходов: {result[6]}")
        print(f"Сумма расходов: {result[7]}")
    else:
        print("Запись не найдена.")


# Функция для удаления записи из таблицы
def удалить_запись():
    номер_приказа = int(input("Введите номер приказа для удаления: "))
    cursor.execute('''
        DELETE FROM расходы
        WHERE номер_приказа = ?
    ''', (номер_приказа,))
    conn.commit()
    print("Запись успешно удалена.")


# Функция для редактирования записи в таблице
def редактировать_запись():
    номер_приказа = int(input("Введите номер приказа для редактирования: "))
    cursor.execute('''
        SELECT * FROM расходы
        WHERE номер_приказа = ?
    ''', (номер_приказа,))
    result = cursor.fetchone()
    if result:
        print("Найденная запись:")
        print(f"№ приказа: {result[1]}")
        print(f"Фамилия: {result[2]}")
        print(f"Место командировки: {result[3]}")
        print(f"Оплата: {result[4]}")
        print(f"Аванс: {result[5]}")
        print(f"Вид расходов: {result[6]}")
        print(f"Сумма расходов: {result[7]}")

        новый_номер_приказа = int(input("Введите новый номер приказа (оставьте пустым, если не изменяется): "))
        if новый_номер_приказа:
            cursor.execute('''
                UPDATE расходы
                SET номер_приказа = ?
                WHERE номер_приказа = ?
            ''', (новый_номер_приказа, номер_приказа))
        новая_фамилия_сотрудника = input("Введите новую фамилию сотрудника (оставьте пустым, если не изменяется): ")
        if новая_фамилия_сотрудника:
            cursor.execute('''
                UPDATE расходы
                SET фамилия_сотрудника = ?
                WHERE номер_приказа = ?
            ''', (новая_фамилия_сотрудника, номер_приказа))
        новое_место_командировки = input("Введите новое место командировки (оставьте пустым, если не изменяется): ")
        if новое_место_командировки:
            cursor.execute('''
                UPDATE расходы
                SET место_командировки = ?
                WHERE номер_приказа = ?
            ''', (новое_место_командировки, номер_приказа))
        новая_сумма_оплаты = float(input("Введите новую сумму оплаты (оставьте пустым, если не изменяется): "))
        if новая_сумма_оплаты:
            cursor.execute('''
                UPDATE расходы
                SET сумма_оплаты = ?
                WHERE номер_приказа = ?
            ''', (новая_сумма_оплаты, номер_приказа))
        новая_сумма_аванса = float(input("Введите новую сумму аванса (оставьте пустым, если не изменяется): "))
        if новая_сумма_аванса:
            cursor.execute('''
                UPDATE расходы
                SET сумма_аванса = ?
                WHERE номер_приказа = ?
            ''', (новая_сумма_аванса, номер_приказа))
        новый_вид_расходов = input("Введите новый вид расходов (оставьте пустым, если не изменяется): ")
        if новый_вид_расходов:
            cursor.execute('''
                UPDATE расходы
                SET вид_расходов = ?
                WHERE номер_приказа = ?
            ''', (новый_вид_расходов, номер_приказа))
        новая_сумма_расходов = float(input("Введите новую сумму расходов (оставьте пустым, если не изменяется): "))
        if новая_сумма_расходов:
            cursor.execute('''
                UPDATE расходы
                SET сумма_расходов = ?
                WHERE номер_приказа = ?
            ''', (новая_сумма_расходов, номер_приказа))
        conn.commit()
        print("Запись успешно отредактирована.")
    else:
        print("Запись не найдена.")


# Главное меню программы
while True:
    print("\n1. Добавить запись")
    print("2. Поиск записи")
    print("3. Удалить запись")
    print("4. Редактировать запись")
    print("5. Выйти из программы")
    choice = int(input("Выберите операцию: "))

    if choice == 1:
        добавить_запись()
    elif choice == 2:
        поиск_записи()
    elif choice == 3:
        удалить_запись()
    elif choice == 4:
        редактировать_запись()
    elif choice == 5:
        break
    else:
        print("Неверный выбор. Пожалуйста, выберите одну из доступных операций.")

# Закрытие соединения с базой данных
conn.close()